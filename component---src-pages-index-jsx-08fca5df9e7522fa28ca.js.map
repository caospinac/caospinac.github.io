{"version":3,"file":"component---src-pages-index-jsx-08fca5df9e7522fa28ca.js","mappings":"sKAEaA,EAAcC,EAAAA,QAAAA,IAAAA,WAAH,+DAAGA,CAAH,6DAOXC,EAAkBD,EAAAA,QAAAA,IAAAA,WAAH,mEAAGA,CAAH,0LAcdE,EAAYF,EAAAA,QAAAA,IAAAA,WAAH,6DAAGA,CAAH,4D,UCpBVG,EAAS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACvB,OACE,SAACL,EAAD,WACE,SAACE,EAAD,UACGG,O,onBCFIC,GAAiBC,EAAAA,EAAAA,eAAcC,GAE/BC,EAAkB,SAAC,GAAkB,IAAhBJ,EAAe,EAAfA,SAChC,OACE,SAACC,EAAeI,SAAhB,CAAyBC,MAAOH,EAAhC,SACGH,KCRMO,EAAYX,EAAAA,QAAAA,QAAAA,WAAH,4DAAGA,CAAH,2CAKTY,EAAQZ,EAAAA,QAAAA,IAAAA,WAAH,wDAAGA,CAAH,oQAwBLa,EAASb,EAAAA,QAAAA,IAAAA,WAAH,yDAAGA,CAAH,uFC5Bbc,EAAK,SAAC,GAAc,IAAZC,EAAW,EAAXA,KACZ,OACE,UAACJ,EAAD,YACE,wBAAKI,EAAKC,QACV,SAACH,EAAD,WACE,gBAAKI,IAAKF,EAAKG,WAAYC,IAAKJ,EAAKC,UAEvC,0BAAOD,EAAKK,SACZ,yBACE,SAACR,EAAD,UACGG,EAAKM,MAAMC,KAAI,SAACC,EAAMC,GAAP,OACd,cAAWC,KAAMF,EAAKE,KAAMC,OAAO,SAASC,IAAI,aAAhD,UACE,cAAGC,UAAS,SAAWL,EAAKM,QADtBL,cAgBpBV,EAAGgB,GAAK,KAER,QC9BaC,EAAiB/B,EAAAA,QAAAA,IAAAA,WAAH,iEAAGA,CAAH,4SC+B3B,EAjBgB,SAAC,GAAkB,IAAhBgC,EAAe,EAAfA,GAAIjB,EAAW,EAAXA,KACfkB,GAAmBC,EAAAA,EAAAA,UAAQ,kBAZnB,SAAAF,GACd,OAAQA,IACHlB,EAAAA,GACIA,EAGA,KAM8BqB,CAAQH,KAAK,CAACA,IAErD,OAAKC,GAGH,SAACF,EAAD,WACE,SAACE,EAAD,CAAkBlB,KAAMA,OAJE,yBCChC,EAfa,WACX,IAAQqB,GAAaC,EAAAA,EAAAA,YAAWhC,GAAxB+B,SAER,OACE,SAAClC,EAAD,UACGkC,EAASd,KAAI,SAAAgB,GACZ,MAAqBC,OAAOC,QAAQF,GAApC,GAAQN,EAAR,KAAYjB,EAAZ,KAEA,OAAO,SAAC,EAAD,CAAkBiB,GAAIA,EAAIjB,KAAMA,GAAlBiB,SCK7B,EAdkB,WAEhB,OACE,6BACE,SAAC7B,EAAD,+CAGA,SAACK,EAAD,WACE,SAAC,EAAD","sources":["webpack://caospinac/./src/components/common/styled.jsx","webpack://caospinac/./src/components/common/index.jsx","webpack://caospinac/./src/context/content.jsx","webpack://caospinac/./src/components/main/section/me/styled.jsx","webpack://caospinac/./src/components/main/section/me/index.jsx","webpack://caospinac/./src/components/main/section/styled.jsx","webpack://caospinac/./src/components/main/section/index.jsx","webpack://caospinac/./src/components/main/index.jsx","webpack://caospinac/./src/pages/index.jsx"],"sourcesContent":["import styled from 'styled-components'\n\nexport const BannerPlace = styled.div`\n  position: relative;\n  display: block;\n  width: 100%;\n  height: 50px;\n`\n\nexport const BannerContainer = styled.div`\n  position: absolute;\n  width: 100%;\n  height: inherit;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  margin: inherit;\n  padding: inherit;\n  background-color: var(--dark-3);\n  color: var(--light);\n`\n\nexport const  Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`\n","import PropTypes from 'prop-types'\nimport { BannerPlace, BannerContainer } from './styled'\n\nexport const Banner = ({ children }) => {\n  return (\n    <BannerPlace>\n      <BannerContainer>\n        {children}\n      </BannerContainer>\n    </BannerPlace>\n  )\n}\n\nBanner.propTypes = {\n  children: PropTypes.node,\n}\n","import { createContext } from 'react'\nimport PropTypes from 'prop-types'\n\nimport contentJSON from '../../static/content.json'\n\nexport const ContentContext = createContext(contentJSON)\n\nexport const ContentProvider = ({ children }) => {\n  return (\n    <ContentContext.Provider value={contentJSON}>\n      {children}\n    </ContentContext.Provider>\n  )\n}\n\nContentProvider.propTypes = {\n  children: PropTypes.node,\n}\n","import styled from 'styled-components'\n\nexport const MeSection = styled.section`\n  align-items: center;\n  text-align: center;\n`\n\nexport const Media = styled.div`\n  display: flex;\n\n  a {\n    display: flex;\n    justify-content: center;\n    margin: .1em;\n    width: 1.4em;\n    height: 1.4em;\n    border-radius: 50%;\n    background-color: var(--light-2);\n\n    transition: background-color .2s;\n\n    &:hover {\n      background-color: var(--light-3);\n    }\n\n    &:active {\n      background-color: var(--light-4);\n    }\n  }\n`\n\nexport const Avatar = styled.div`\n  margin: 2rem 0;\n\n  img {\n    border-radius: 50%;\n    width: 200px;\n    height: 200px;\n    object-fit: contain;\n  }\n`\n","import PropTypes from 'prop-types'\nimport { Avatar, Media, MeSection } from './styled'\n\nconst Me = ({ data }) => {\n  return (\n    <MeSection>\n      <h2>{data.name}</h2>\n      <Avatar>\n        <img src={data.avatar_url} alt={data.name} />\n      </Avatar>\n      <span>{data.about}</span>\n      <h2>\n        <Media>\n          {data.media.map((site, i) => (\n            <a key={i} href={site.href} target='_blank' rel='noreferrer'>\n              <i className={`fa fa-${site.icon}`}></i>\n            </a>\n          ))}\n        </Media>\n      </h2>\n    </MeSection>\n  )\n}\n\nMe.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.object,\n}\n\n\nMe.ID = 'me'\n\nexport default Me\n","import styled from 'styled-components'\n\nexport const SectionWrapper = styled.div`\n  --section-padding: 1rem;\n  --section-margin: 1rem;\n\n  background-color: white;\n  box-shadow: -.2rem .2rem 4rem var(--light-2);\n  margin: var(--section-padding);\n  padding: var(--section-margin);\n\n  @media (min-width: 768px) {\n    width: 80vw;\n  }\n\n  @media (min-width: 992px) {\n    width: 70vw;\n  }\n\n  & > section {\n    display: flex;\n    flex-direction: column;\n  }\n`\n","import PropTypes from 'prop-types'\nimport { useMemo } from 'react'\nimport Me from './me'\nimport { SectionWrapper } from './styled'\n\nconst factory = id => {\n  switch (id) {\n  case Me.ID:\n    return Me\n\n  default:\n    return null\n  }\n\n}\n\nconst Section = ({ id, data }) => {\n  const SectionComponent = useMemo(() => factory(id), [id])\n\n  if (!SectionComponent) return <></>\n\n  return (\n    <SectionWrapper>\n      <SectionComponent data={data} />\n    </SectionWrapper>\n  )\n}\n\nSection.propTypes = {\n  id: PropTypes.string,\n  data: PropTypes.object,\n}\n\nexport default Section\n","import { useContext } from 'react'\nimport { ContentContext } from '../../context/content'\nimport { Container } from '../common/styled'\nimport Section from './section'\n\nconst Main = () => {\n  const { sections } = useContext(ContentContext)\n\n  return (\n    <Container>\n      {sections.map(section => {\n        const [[id, data]] = Object.entries(section)\n\n        return <Section key={id} id={id} data={data} />\n      })}\n    </Container>\n  )\n\n}\n\nexport default Main\n","import { Banner } from '../components/common'\nimport Main from '../components/main'\nimport { ContentProvider } from '../context/content'\n\nconst IndexPage = () => {\n\n  return (\n    <main>\n      <Banner>\n        This website is being developed\n      </Banner>\n      <ContentProvider>\n        <Main />\n      </ContentProvider>\n    </main>\n  )\n}\n\nexport default IndexPage\n"],"names":["BannerPlace","styled","BannerContainer","Container","Banner","children","ContentContext","createContext","contentJSON","ContentProvider","Provider","value","MeSection","Media","Avatar","Me","data","name","src","avatar_url","alt","about","media","map","site","i","href","target","rel","className","icon","ID","SectionWrapper","id","SectionComponent","useMemo","factory","sections","useContext","section","Object","entries"],"sourceRoot":""}